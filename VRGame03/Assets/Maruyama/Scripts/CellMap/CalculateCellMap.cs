using System.Collections;
using System.Collections.Generic;
using UnityEngine;

    public class CalculateCellMap
    {
        void Test()
        {
            //int curCell_X = *;  // 現在のセルの水平軸インデックス( 初期セルのインデックスを代入 )
            //int curCell_Y = *;  // 現在のセルの垂直軸インデックス( 初期セルのインデックスを代入 )
            //int dir_X = 1;      // 直線の水平軸方向の進行方向
            //int dir_Y = 1;      // 直線の垂直軸方向の進行方向

            //float next_X = *:   //次の垂直軸との交差点までの、始点からの距離
            //float next_Y = *;   //次の水平軸との交差点までの、始点からの距離

            //float dist = *;     //始点から終点までの距離
            //float t = 0;        //始点から現在の交点までの距離

            //int tx = *;         //水平軸と直線との交差点間の距離
            //int ty = *;         //垂直軸と直線との交差点間の距離

            //while (t < dist)
            //{
            //    if (next_X <= next_Y)
            //    { //水平軸との交点の方が近い
            //        curCell_X += dir_X; t = next_X; next_X += tx; //水平軸方向に交点を辿る
            //    }
            //    else
            //    { //垂直軸との交点の方が近い
            //        curCell_Y += dir_Y; t = next_Y; next_Y += ty; //垂直軸方向に交点を辿る
            //    }

            //    //curCell_X、curCell_Yが示すセルの状態を見る
            //}
        }

    }



